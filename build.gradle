group = 'com.certapp'
version = '1.0.0'

apply plugin: 'java'
//apply plugin: 'maven'
//apply plugin: 'idea'
//apply plugin: 'eclipse'


sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
//    maven {
//		url "http://maven.aliyun.com/nexus/content/groups/public/"
//    }
    maven { url "http://maven.weoa.com/nexus/content/groups/public/" }
}

def springboot_version="2.7.12"
List springboot = [
     "org.springframework.boot:spring-boot-starter-web:$springboot_version",
     "org.springframework.boot:spring-boot-starter-jdbc:$springboot_version",
     "org.springframework.boot:spring-boot-starter-aop:$springboot_version"
]

def log4j_version="2.19.0"
List logger = [
    "org.apache.logging.log4j:log4j-api:$log4j_version",
    "org.apache.logging.log4j:log4j-core:$log4j_version",
    "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
    "org.apache.logging.log4j:log4j-web:$log4j_version"
]

List jaxb = [
     "javax.xml.bind:jaxb-api:2.3.0",
     "com.sun.xml.bind:jaxb-impl:2.3.0",
     "com.sun.xml.bind:jaxb-core:2.3.0",
     "javax.activation:activation:1.1.1"
]

List lombok = [
    "org.projectlombok:lombok:1.18.24"
]

List jwt = [
    "io.jsonwebtoken:jjwt:0.9.1"
]

List swagger = [
    'io.springfox:springfox-boot-starter:3.0.0'
]

def jackson_version = "2.14.0"
List jackson = [
    "com.fasterxml.jackson.core:jackson-annotations:$jackson_version",
    "com.fasterxml.jackson.core:jackson-core:$jackson_version",
    "com.fasterxml.jackson.core:jackson-databind:$jackson_version",
    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
]

List mysql = [
        "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2",
        "org.mybatis:mybatis:3.5.6",
        "com.zaxxer:HikariCP:3.2.0"
]

List test = [
    "org.springframework.boot:spring-boot-starter-test:$springboot_version",
    "com.github.yuanmomo:mybatis-generator-plugin:1.0.11"
]
List druid = ['com.alibaba:druid:1.1.22']

dependencies {
    compile springboot,jaxb,jwt,swagger,jackson,mysql,logger,druid

    runtime 'com.mysql:mysql-connector-j:8.0.33'

//    compile files('libs/DcssSDK-1.3.0-RELEASE.jar')
//    compile files('libs/DappSDK-1.2.0-20220905.jar')
    compile 'com.webank.wbbc:DappSDK:1.6.0-20230606'
    
//    compile 'org.fisco-bcos.java-sdk:fisco-bcos-java-sdk:2.9.1'
    compile 'org.fisco-bcos.java-sdk:fisco-bcos-java-sdk-v3:3.0.0'
    compile 'com.google.zxing:core:3.5.1'
    compile 'com.google.zxing:javase:3.5.1'
    compile 'org.bouncycastle:bcprov-jdk15on:1.67'
    compile 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'
    compile 'org.apache.poi:poi-ooxml:5.2.3'

    compile "org.apache.commons:commons-lang3:3.12.0"
    compile "cn.hutool:hutool-all:5.8.12"
    compile "com.lmax:disruptor:3.4.4"
    compile 'javax.validation:validation-api:2.0.1.Final'
    compile 'org.hibernate.validator:hibernate-validator:6.2.3.Final'
    compile "com.google.guava:guava:32.0.1-android"
    compile 'com.google.code.gson:gson:2.8.9'
    compile 'junit:junit:4.13.2'
    compile 'org.springframework.security:spring-security-core:5.7.8'
    compile 'net.minidev:json-smart:2.4.9'
    compile 'org.yaml:snakeyaml:2.0'

    compile lombok
    annotationProcessor lombok

    testCompile test
    testCompile lombok
    testAnnotationProcessor lombok
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'org.ow2.asm', module: 'asm'
    all*.exclude group: 'jline', module: 'jline'
    all*.exclude group: 'com.google.protobuf', module: 'protobuf-java'
    all*.exclude group: 'javax.annotation', module: 'javax.annotation-api'
    all*.exclude group: 'org.ethereum'
    all*.exclude group: 'com.alibaba', module: 'fastjson'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

clean {
    delete 'dist'
    delete 'build'
    delete 'logs'
}

jar {
    destinationDir file('dist/apps')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.yml'
    exclude '**/*.properties'

    doLast {
        copy {
            from file('src/main/resources/prd/')
            into 'dist/conf'
        }
        copy {
            from file('src/main/resources/fonts/')
            into 'dist/conf/fonts'
        }
        copy {
            from file('cert/')
            into 'dist/cert'
        }
        copy {
            from file('files/')
            into 'dist/files'
        }
        copy {
            from file('script/')
            into 'dist/script'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('.').listFiles().findAll{File f -> (f.name.endsWith('.sh') || f.name.endsWith('.env'))}
            into 'dist'
        }
    }
}
